[
    {
        "Code": "",
        "Label": "EMPTY"
    },
    {
        "Code": "@Main\r>#INVOKE0\r<#TRIGER\r$FUNCTION_NAME\r-------\rpublic void @FUNCTION_NAME (dynamic param)\r{\r            System.Collections.Generic.Dictionary<String, Object> result = new Dictionary<string, object>();\r            var this_type = this.GetType();\r            String F_Name_invoking = \"@#INVOKE0\";\r            var method=this_type.GetMethod(F_Name_invoking);\r            dynamic d = new System.Dynamic.ExpandoObject();\r\r          while (F_Name_invoking != null && F_Name_invoking.Length != 0 )\r            {\r                d = new System.Dynamic.ExpandoObject();\r                d.GLOBAL_OUTPUT = result;\r                dynamic invoke_res =method.Invoke(this, new object[]{d});\r                result[F_Name_invoking] = invoke_res;\r                if(invoke_res.FUNCTIONNAMETOINVOKE==null)\r                 {\r                     break;\r                 } \r                F_Name_invoking = invoke_res.FUNCTIONNAMETOINVOKE;\r                method = this_type.GetMethod(F_Name_invoking);\r            }\r}\r\r",
        "Label": "Main"
    },
    {
        "Code": "@COMMON_NODE\r<#TRIGER\r<I_Param0\r>#INVOKE0\r>O_1\r-------\rpublic dynamic @FUNCTION (dynamic param)\r{\r\/\/global output \rSystem.Collections.Generic.Dictionary<String, Object> GLOBAL_OUTPUT = param.GLOBAL_OUTPUT;\r\/\/Inputs\r@I_Param0;\r\r\/\/TODO:\r\/\/ADD YOUR CODE HERE\r\/\/\r\rdynamic d=new System.Dynamic.ExpandoObject();\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE0\";\r\r\/\/SET YOUR OUTPUT VALUE HERE\rd.O_1=\"2\";\rreturn d;\r}\r\r",
        "Label": "COMMON_NODE"
    },
    {
        "Code": "@PARAM_NODE\r<#TRIGER\r>#INVOKE0\r>O_0\r>O_1\r$Parameter0\r$Parameter1\r-------\rpublic dynamic @FUNCTION (dynamic param)\r{\r\/\/global output \rSystem.Collections.Generic.Dictionary<String, Object> GLOBAL_OUTPUT = param.GLOBAL_OUTPUT;\r\/\/Inputs:\r\r\/\/TODO:\r\/\/ADD YOUR CODE HERE\rString p0=\"@Parameter0\";\rString p1=\"@Parameter1\";\r\/\/\r\rdynamic d=new System.Dynamic.ExpandoObject();\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE0\";\r\r\/\/SET YOUR OUTPUT VALUE HERE\rd.O_0=p0;\rd.O_1=p1;\rreturn d;\r}\r\r",
        "Label": "PARAM_NODE"
    },
    {
        "Code": "@LOG_NODE\r<#TRIGER\r<I_LOG\r>#INVOKE0\r-------\rpublic dynamic @FUNCTION (dynamic param)\r{\r\/\/global output \rSystem.Collections.Generic.Dictionary<String, Object> GLOBAL_OUTPUT = param.GLOBAL_OUTPUT;\r\/\/Inputs\r@I_LOG;\r\r\/\/TODO:\r\/\/ADD YOUR CODE HERE\rString log=I_LOG.ToString();\rConsole.WriteLine(log);\r\/\/\r\rdynamic d=new System.Dynamic.ExpandoObject();\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE0\";\r\r\/\/SET YOUR OUTPUT VALUE HERE\r\rreturn d;\r}\r\r",
        "Label": "LOG_NODE"
    },
    {
        "Code": "@READLINE_NODE\r<#TRIGER\r>#INVOKE0\r>O_READLINE\r$PROMPT\r\r-------\rpublic dynamic @FUNCTION (dynamic param)\r{\r\/\/global output \rSystem.Collections.Generic.Dictionary<String, Object> GLOBAL_OUTPUT = param.GLOBAL_OUTPUT;\r\/\/Inputs:\r\r\/\/TODO:\r\/\/ADD YOUR CODE HERE\rConsole.WriteLine(\"@PROMPT\");\rString res=Console.ReadLine();\r\/\/\r\rdynamic d=new System.Dynamic.ExpandoObject();\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE0\";\r\r\/\/SET YOUR OUTPUT VALUE HERE\rd.O_READLINE=res;\rreturn d;\r}\r\r",
        "Label": "READLINE_NODE"
    },
    {
        "Code": "@LOOP_NODE\r<#TRIGER\r<#LOOPTRIGER\r<I_BOOL\r<I_INDEX\r>#INVOKE_TRUE\r>#INVOKE_FALSE\r>O_BOOL\r>O_INDEX\r\r-------\rpublic dynamic @FUNCTION (dynamic param)\r{\r\/\/global output \rSystem.Collections.Generic.Dictionary<String, Object> GLOBAL_OUTPUT = param.GLOBAL_OUTPUT;\r\/\/Inputs\r@I_BOOL;\r@I_INDEX;\r\r\/\/TODO:\r\/\/ADD YOUR CODE HERE\rif(I_BOOL==null) {I_BOOL=true;}\rif(I_INDEX==null) {I_INDEX=0;}\rbool loop_bool=(Convert.ToBoolean(I_BOOL.ToString()));\rint index=Convert.ToInt32(I_INDEX.ToString());\rindex++;\r\/\/TODO:\rif(index>5)\r{\rloop_bool=false;\r}\r\/\/\r\rdynamic d=new System.Dynamic.ExpandoObject();\rif(loop_bool)\r{\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE_TRUE\";\r}else\r{\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE_FALSE\";\r\r}\r\/\/SET YOUR OUTPUT VALUE HERE\rd.O_BOOL=loop_bool;\rd.O_INDEX=index;\rreturn d;\r}\r\r",
        "Label": "LOOP_NODE"
    },
    {
        "Code": "@STRING_NODE\r<#TRIGER\r>#INVOKE0\r>O_OUTPUT\r$Parameter0\r-------\rpublic dynamic @FUNCTION (dynamic param)\r{\r\/\/global output \rSystem.Collections.Generic.Dictionary<String, Object> GLOBAL_OUTPUT = param.GLOBAL_OUTPUT;\r\/\/Inputs:\r\r\/\/TODO:\r\/\/ADD YOUR CODE HERE\rString p0=\"@Parameter0\";\r\r\/\/\r\rdynamic d=new System.Dynamic.ExpandoObject();\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE0\";\r\r\/\/SET YOUR OUTPUT VALUE HERE\rd.O_OUTPUT=p0;\r\rreturn d;\r}\r\r",
        "Label": "STRING_NODE"
    },
    {
        "Code": "@FOR_NODE\r<#TRIGER\r<#LOOPTRIGER\r<I_BOOL\r<I_INDEX\r>#INVOKE_TRUE\r>#INVOKE_FALSE\r>O_BOOL\r>O_INDEX\r$LOOP_TIMES\r-------\rpublic dynamic @FUNCTION (dynamic param)\r{\r\/\/global output \rSystem.Collections.Generic.Dictionary<String, Object> GLOBAL_OUTPUT = param.GLOBAL_OUTPUT;\r\/\/Inputs\r@I_BOOL;\r@I_INDEX;\r\r\/\/TODO:\r\/\/ADD YOUR CODE HERE\rif(I_BOOL==null) {I_BOOL=true;}\rif(I_INDEX==null) {I_INDEX=0;}\rbool loop_bool=(Convert.ToBoolean(I_BOOL.ToString()));\rint index=Convert.ToInt32(I_INDEX.ToString());\rindex++;\r\/\/TODO:\rif(index>@LOOP_TIMES)\r{\rloop_bool=false;\r}\r\/\/\r\rdynamic d=new System.Dynamic.ExpandoObject();\rif(loop_bool)\r{\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE_TRUE\";\r}else\r{\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE_FALSE\";\r\r}\r\/\/SET YOUR OUTPUT VALUE HERE\rd.O_BOOL=loop_bool;\rd.O_INDEX=index;\rreturn d;\r}\r\r",
        "Label": "FOR_NODE"
    },
    {
        "Code": "@IF_NODE\r<#TRIGER\r<#ALTER_TRIGER\r<I_BOOL\r>#INVOKE_TRUE\r>#INVOKE_FALSE\r-------\rpublic dynamic @FUNCTION (dynamic param)\r{\r\/\/global output \rSystem.Collections.Generic.Dictionary<String, Object> GLOBAL_OUTPUT = param.GLOBAL_OUTPUT;\r\/\/Inputs\r@I_BOOL;\r\r\/\/TODO:\r\/\/ADD YOUR CODE HERE\rif(I_BOOL==null) {I_BOOL=true;}\r\rbool if_bool=(Convert.ToBoolean(I_BOOL.ToString()));\r\/\/\r\rdynamic d=new System.Dynamic.ExpandoObject();\rif(if_bool)\r{\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE_TRUE\";\r}else\r{\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE_FALSE\";\r\r}\r\/\/SET YOUR OUTPUT VALUE HERE\r\rreturn d;\r}\r\r",
        "Label": "IF_NODE"
    },
    {
        "Code": "@COMPARE_NODE\r<#TRIGER\r<I_Param_A\r<I_Param_B\r>#INVOKE0\r>O_COMPARE\r-------\rpublic dynamic @FUNCTION (dynamic param)\r{\r\/\/global output \rSystem.Collections.Generic.Dictionary<String, Object> GLOBAL_OUTPUT = param.GLOBAL_OUTPUT;\r\/\/Inputs\r@I_Param_A;\r@I_Param_B;\r\r\/\/TODO:\r\/\/ADD YOUR CODE HERE\rString a_str=I_Param_A==null?\"\":I_Param_A.ToString();\rString b_str=I_Param_B==null?\"\":I_Param_B.ToString();\rbool b_equal=a_str.Equals(b_str);\r\r\/\/\r\rdynamic d=new System.Dynamic.ExpandoObject();\rd.FUNCTIONNAMETOINVOKE=\"@#INVOKE0\";\r\r\/\/SET YOUR OUTPUT VALUE HERE\rd.O_COMPARE =b_equal;\rreturn d;\r}\r\r",
        "Label": "COMPARE_NODE"
    }
]