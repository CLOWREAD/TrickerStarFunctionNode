{"PresetCodes":[{"NodeName":"PRINT","OriginalCode":"@PRINT\rINPUT RUN : EXECUTE\rINPUT V : STRING\rOUTPUT INVOKE : EXECUTE \r-------------------\rdef @TRICKER_STAR_FUNCTIONNAME (self, param):\r    GLOBAL_OUTPUT = param[\"GLOBAL_OUTPUT\"];\r    V=GLOBAL_OUTPUT[\"TRICKER_STAR_LINKED_NODE(V)\"][\"TRICKER_STAR_LINKED_SLOT(V)\"];\r    d= dict();\r    print(V);\r    d[\"FUNCTIONNAMETOINVOKE\"]=\"TRICKER_STAR_INVOKE(INVOKE)\";\r    return d;\r\r\t\r\r\r"},{"NodeName":"INSTANCEVALUE_STRING","OriginalCode":"\r@INSTANCEVALUE_STRING\rINPUT RUN : EXECUTE\rINPUT V : INSTANCE_VALUE\rOUTPUT INVOKE : EXECUTE \rOUTPUT VALUE : STRING \r-------------------\rdef @TRICKER_STAR_FUNCTIONNAME (self, param):\r    GLOBAL_OUTPUT = param[\"GLOBAL_OUTPUT\"];\r    V=  \"TRICKER_STAR_INSTANCE_VALUE(V)\";\r    d= dict();\r    d[\"FUNCTIONNAMETOINVOKE\"]=\"TRICKER_STAR_INVOKE(INVOKE)\";\r    d[\"VALUE\"]=V;\r    return d;\r\r"},{"NodeName":"MAIN","OriginalCode":"    \r@MAIN\rINPUT API_NAME : INSTANCE_VALUE\rOUTPUT INVOKE : EXECUTE \r-------------------\rdef TRICKER_STAR_INSTANCE_VALUE(API_NAME) (self, param):\r    result = dict();\r    method = self.TRICKER_STAR_INVOKE(INVOKE);            \r    F_Name_invoking = \"TRICKER_STAR_INVOKE(INVOKE)\";          \r    while (F_Name_invoking != None and F_Name_invoking != \"null\" ):            \r        d = dict();\r        d[\"GLOBAL_OUTPUT\"] = result;\r        invoke_res =method(d);\r        result[F_Name_invoking] = invoke_res;\r        if(invoke_res[\"FUNCTIONNAMETOINVOKE\"]==None):        \r            break;         \r        if(invoke_res[\"FUNCTIONNAMETOINVOKE\"]==\"null\"):        \r            break;\r        F_Name_invoking = invoke_res[\"FUNCTIONNAMETOINVOKE\"]\r        method =  getattr(self ,F_Name_invoking);\r\r\r            "}]}